var express = require('express');
var router = express.Router();

const nameList = [
{ 'id': 'ID#', 'Term': 'Term', 'Description': 'Description' , 'Reference': 'Reference'},
{ 'id': 1, 'Term': 'Agile approaches', 'Description': 'Agile approaches in software deployment are methodologies and practices that prioritize flexibility, collaboration, and iterative development to deliver software more efficiently and effectively.' , 'Reference': 'Altvater, A. (2023, March 5). What is Agile Methodology? Tools, Best Practices & More. Stackify. https://stackify.com/agile-methodology'},
{ 'id': 2, 'Term': 'Shift-left', 'Description': 'Quality is everyones responsibility. Also, Automation speeds up testing' , 'Reference': 'Gunja, S. (2022, October 27). Shift left vs shift right: A DevOps mystery solved. Dynatrace News. https://www.dynatrace.com/news/blog/what-is-shift-left-and-what-is-shift-right'},
{ 'id': 3, 'Term': 'DevOps', 'Description': 'Bridge the gap between development and IT operations, DevOps emphasizes shared responsibility.' , 'Reference': 'Kawaguchi, S. (2022, February 12). The Wall of Confusion. Medium. https://levelup.gitconnected.com/the-wall-of-confusion-623057a4dd26'},
{ 'id': 4, 'Term': 'Bootstrapping Microservices', 'Description': 'It involves creating the foundational components, such as service templates, containers, and orchestration configurations, to enable the development, deployment, and management of microservices. Bootstrapping is a critical step in launching a microservices' , 'Reference': 'Davis, A author. 2021, ‘Bootstrapping Microservices with Docker, Kubernetes, and Terraform / Davis, Ashley’, viewed 11 July 2022'},
{ 'id': 5, 'Term': 'cloud computing', 'Description': 'It enables access to shared pool of computing resources, offers a wide range of options for hosting applications and data.' , 'Reference': 'What Is Cloud Computing? | Microsoft Azure. (n.d.). What Is Cloud Computing? | Microsoft Azure. https://azure.microsoft.com/en-au/resources/cloud-computing-dictionary/what-is-cloud-computing'},
{ 'id': 6, 'Term': 'Kubernetes', 'Description': 'It isa open source container platform, makes container managing easier, crucial tool for app deployment.' , 'Reference': 'Production-Grade Container Orchestration. (n.d.). Kubernetes. https://kubernetes.io/'},
{ 'id': 7, 'Term': 'Version control', 'Description': 'manages changes to files and code over time, provide a structured and organized approach to software development.' , 'Reference': 'A. (n.d.). What is version control | Atlassian Git Tutorial. Atlassian. https://www.atlassian.com/git/tutorials/what-is-version-control'},
{ 'id': 8, 'Term': 'Automation', 'Description': 'It streamline tasks such as code builds, testing, configuration management, and deployment to production environments.' , 'Reference': 'What is automation? | IBM. (n.d.). What Is Automation? | IBM. https://www.ibm.com/topics/automation'},
{ 'id': 9, 'Term': 'Continuous testing', 'Description': 'It ensures that code is continuously validated for quality, functionality, and performance, providing rapid feedback to developers. Continuous testing is the key component.' , 'Reference': 'DevOps & Continuous Testing. (n.d.). QuerySurge. https://www.querysurge.com/solutions/querysurge-for-devops'},
{ 'id': 10, 'Term': 'Scalability', 'Description': 'refers to the ability of a system, application, or infrastructure to handle increased workloads or user demands effectively. It involves designing and configuring systems to accommodate growing loads without significant performance degradation or the need for a complete overhaul' , 'Reference': 'What is Cloud Scalability? | Cloud Scale | VMware. (n.d.). VMware. https://www.vmware.com/topics/glossary/content/cloud-scalability.html'},
{ 'id': 11, 'Term': 'Continuous Integration', 'Description': 'A development practice where code changes are automatically integrated into a shared repository multiple times a day, ensuring early detection of integration issues.' , 'Reference': 'A. (n.d.). Continuous integration vs. delivery vs. deployment. Atlassian. https://www.atlassian.com/continuous-delivery/principles/continuous-integration-vs-delivery-vs-deployment'},
{ 'id': 12, 'Term': 'Continuous Delivery', 'Description': 'An extension of CI that automates the entire software delivery process, enabling frequent and reliable releases to production with minimal manual intervention.' , 'Reference': 'What is Continuous Delivery? - Continuous Delivery. (n.d.). What Is Continuous Delivery? - Continuous Delivery. https://continuousdelivery.com/'},
{ 'id': 13, 'Term': 'Containerization', 'Description': 'The use of containers (e.g., Docker) to package applications and their dependencies, ensuring consistency across different environments and simplifying deployment.' , 'Reference': 'What is a Container? | Docker. (n.d.). Docker. https://www.docker.com/resources/what-container/'},
{ 'id': 14, 'Term': 'Orchestration', 'Description': 'The automation and coordination of containerized application deployment, scaling, and management, often done with tools like Kubernetes.' , 'Reference': 'What is orchestration? (2019, October 15). What Is Orchestration? https://www.redhat.com/en/topics/automation/what-is-orchestration'},
{ 'id': 15, 'Term': 'Infrastructure as Code', 'Description': 'The practice of defining and managing infrastructure using code, allowing for automated provisioning and configuration of resources.' , 'Reference': 'Infrastructure as Code (IaC) | Definition & Guide. (n.d.). Infrastructure as Code (IaC) | Definition & Guide | Sonar. https://www.sonarsource.com/learn/infrastructure-as-code/'},
{ 'id': 16, 'Term': 'Configuration Management', 'Description': 'The process of maintaining consistent and desired configurations for software and infrastructure components, ensuring they match the intended state.' , 'Reference': 'What is Configuration Management? (n.d.). VMware. https://www.vmware.com/topics/glossary/content/configuration-management.html'},
{ 'id': 17, 'Term': 'Deployment Pipeline', 'Description': 'A series of automated steps and tests that code must pass through before being deployed to production, facilitating a controlled release process.' , 'Reference': 'What is a Deployment Pipeline? (n.d.). PagerDuty. https://www.pagerduty.com/resources/learn/what-is-a-deployment-pipeline/'},
{ 'id': 18, 'Term': 'Continuous Monitoring', 'Description': ' The continuous tracking and analysis of system performance and behavior to detect issues and ensure optimal operation.' , 'Reference': 'What Is Continuous Monitoring? - CrowdStrike. (n.d.). crowdstrike.com. https://www.crowdstrike.com/cybersecurity-101/observability/continuous-monitoring/'},
{ 'id': 19, 'Term': 'Audit Logging', 'Description': 'The recording of events and activities within an application or infrastructure for troubleshooting, analysis, and auditing purposes.' , 'Reference': 'D. (2022, March 9). Audit Logging: What It Is & How It Works | Datadog. Audit Logging: What It Is & How It Works. https://www.datadoghq.com/knowledge-center/audit-logging/'},
{ 'id': 20, 'Term': 'Incident Management', 'Description': 'The process of identifying, responding to, and resolving incidents that disrupt the normal operation of a system or service.' , 'Reference': 'A. (n.d.). Incident Management: Processes, Best Practices & Tools. Atlassian. https://www.atlassian.com/incident-management'},
{ 'id': 21, 'Term': 'Security as Code', 'Description': ' The integration of security practices and measures into the DevOps pipeline, ensuring security is a priority from the beginning of development.' , 'Reference': 'What is Security as Code (SaC)? - Check Point Software. (n.d.). Check Point Software. https://www.checkpoint.com/cyber-hub/cloud-security/what-is-security-as-code-sac/'},
{ 'id': 22, 'Term': 'Immutable Infrastructure', 'Description': 'Treating infrastructure as unchangeable and recreating it when updates are required, reducing configuration drift and ensuring consistency.' , 'Reference': 'What is immutable infrastructure? | Definition from TechTarget. (2022, November 1). IT Operations. https://www.techtarget.com/searchitoperations/definition/immutable-infrastructure'},
{ 'id': 23, 'Term': 'Blue-Green Deployment', 'Description': ' A deployment strategy where two identical environments (blue and green) are used, allowing for seamless testing and switching between versions.' , 'Reference': 'Fowler, M. (2010, March 1). bliki: BlueGreenDeployment. martinfowler.com. https://martinfowler.com/bliki/BlueGreenDeployment.html'},
{ 'id': 24, 'Term': 'Infrastructure as a Service (IaaS)', 'Description': 'Cloud computing service that provides virtualized computing resources over the internet, allowing for scalable and on-demand infrastructure. ' , 'Reference': 'What is IaaS? Infrastructure as a Service | Microsoft Azure. (n.d.). What Is IaaS? Infrastructure as a Service | Microsoft Azure. https://azure.microsoft.com/en-us/resources/cloud-computing-dictionary/what-is-iaas'},
{ 'id': 25, 'Term': 'Platform as a Service (PaaS)', 'Description': 'Cloud computing service that provides a platform for developing, deploying, and managing applications, abstracting infrastructure concerns. ' , 'Reference': 'What is PaaS? (2022, August 26). What Is PaaS? https://www.redhat.com/en/topics/cloud-computing/what-is-paas'},
{ 'id': 26, 'Term': 'Continuous Testing', 'Description': 'The practice of automating and continuously executing tests throughout the development pipeline to ensure software quality. ' , 'Reference': 'What is continuous testing? | IBM. (n.d.). What Is Continuous Testing? | IBM. https://www.ibm.com/topics/continuous-testing'},
{ 'id': 27, 'Term': 'Serverless Computing', 'Description': 'A cloud computing model where developers focus on writing code without managing server infrastructure, as it is abstracted away by the cloud provider. ' , 'Reference': 'Serverless computing and applications | Microsoft Azure. (n.d.). Serverless Computing and Applications | Microsoft Azure. https://azure.microsoft.com/en-au/resources/cloud-computing-dictionary/what-is-serverless-computing'},
{ 'id': 28, 'Term': 'ChatOps', 'Description': ' The practice of using chat platforms (e.g., Slack, Teams) to automate and streamline DevOps processes and communication.' , 'Reference': 'A. (n.d.). ChatOps for incident management | Atlassian. Atlassian. https://www.atlassian.com/incident-management/devops/chatops'},
{ 'id': 29, 'Term': 'Artifact Repository', 'Description': 'A centralized location for storing and managing binary artifacts, such as compiled code and dependencies, used in the software development process. ' , 'Reference': 'What is an Artifact Repository? | JFrog. (2019, January 23). JFrog. https://jfrog.com/devops-tools/article/what-is-an-artifact-repository/'},
{ 'id': 30, 'Term': 'Infrastructure Orchestration', 'Description': 'A centralized location for storing and managing binary artifacts, such as compiled code and dependencies, used in the software development process. ' , 'Reference': 'Work, S. (2022, October 27). What is IT Infrastructure Orchestration. Pliant - the Orchestration Platform. https://pliant.io/what-is-it-infrastructure-orchestration/'},
{ 'id': 31, 'Term': 'Terraform', 'Description': 'Terraform is an infrastructure as code (IaC) tool that is commonly used for provisioning and managing infrastructure resources. ' , 'Reference': 'What is Terraform | Terraform | HashiCorp Developer. (n.d.). What Is Terraform | Terraform | HashiCorp Developer. https://developer.hashicorp.com/terraform/intro'},
{ 'id': 32, 'Term': 'Infrastructure as Code (IaC) Testing', 'Description': 'The practice of evaluating and validating infrastructure code to ensure it meets quality and security standards before deployment.' , 'Reference': 'Guide to Operationalizing Your IaC Security Program. (n.d.). Guide to Operationalizing Your IaC Security Program. https://start.paloaltonetworks.com/iac-security-operationalization-guide?utm_source=google-jg-japac-prisma_cloud&utm_medium=paid_search&utm_campaign=google-prisma_cloud-ccs-japac-au-lead_gen-en-fy24q1&utm_content=gs-20405268390-153444703562-667458153337&sfdcid=7014u000001VTyuAAG&gclid=Cj0KCQjw9fqnBhDSARIsAHlcQYQrU3q6FvxJnIcj9-chTZl7ERssJ00JUWMfcfeJS3dxpkI20NEaV3AaAvKvEALw_wcB'},
{ 'id': 33, 'Term': 'Immutable Infrastructure Pattern', 'Description': 'An architectural approach where infrastructure components, once deployed, are never modified; instead, new instances are created to replace outdated ones.' , 'Reference': 'https://www.techtarget.com/searchitoperations/definition/immutable-infrastructure#:~:text=Immutable%20infrastructure%20is%20an%20approach,each%20time%20any%20change%20occurs.'},
{ 'id': 34, 'Term': 'Infrastructure Provisioning', 'Description': 'The process of setting up and configuring the necessary hardware, software, and network resources for applications, often done through automation tools like Terraform or Ansible.' , 'Reference': 'What is provisioning? (2023, March 3). What Is Provisioning? https://www.redhat.com/en/topics/automation/what-is-provisioning'},
{ 'id': 35, 'Term': 'Terraform Provider', 'Description': ' A plugin that interfaces with a specific infrastructure platform or service (e.g., AWS, Azure) to create and manage resources.' , 'Reference': 'Providers - Configuration Language | Terraform | HashiCorp Developer. (n.d.). Providers - Configuration Language | Terraform | HashiCorp Developer. https://developer.hashicorp.com/terraform/language/providers'},
{ 'id': 36, 'Term': 'Terraform Plan', 'Description': 'A command that shows the changes Terraform will make to infrastructure before applying them, allowing for review and validation.' , 'Reference': 'Command: plan | Terraform | HashiCorp Developer. (n.d.). Command: Plan | Terraform | HashiCorp Developer. https://developer.hashicorp.com/terraform/cli/commands/plan'},
{ 'id': 37, 'Term': 'Terraform Apply', 'Description': ' A command that applies changes to infrastructure based on the Terraform configuration and plan.' , 'Reference': 'Command: apply | Terraform | HashiCorp Developer. (n.d.). Command: Apply | Terraform | HashiCorp Developer. https://developer.hashicorp.com/terraform/cli/commands/apply'},
{ 'id': 38, 'Term': 'Terraform Cloud', 'Description': ' A cloud-based service by HashiCorp that provides collaboration, automation, and management of Terraform configurations and workspaces.' , 'Reference': 'Home - Terraform Cloud | Terraform | HashiCorp Developer. (n.d.). Home - Terraform Cloud | Terraform | HashiCorp Developer. https://developer.hashicorp.com/terraform/cloud-docs'},
{ 'id': 39, 'Term': 'Terraform HCL ', 'Description': 'The language used to write Terraform configurations, describing the desired infrastructure state.' , 'Reference': 'Overview - Configuration Language | Terraform | HashiCorp Developer. (n.d.). Overview - Configuration Language | Terraform | HashiCorp Developer. https://developer.hashicorp.com/terraform/language'},
{ 'id': 40, 'Term': 'Terraform Modules', 'Description': ' Reusable, composable, and shareable configurations in Terraform that allow you to encapsulate and manage infrastructure components.' , 'Reference': 'Modules Overview - Configuration Language | Terraform | HashiCorp Developer. (n.d.). Modules Overview - Configuration Language | Terraform | HashiCorp Developer. https://developer.hashicorp.com/terraform/language/modules'},
{ 'id': 41, 'Term': 'Automated Rollouts', 'Description': 'This process involves using continuous integration and continuous deployment (CI/CD) pipelines to automate the deployment of new code or updates to a production environment. Automated rollouts typically include various stages, such as building, testing, and deploying the application. ' , 'Reference': 'Kleban, P. (2023, June 16). Full automation with Argo Rollout blue-green deployment — automatic rollout abort and rollback. Medium. https://medium.com/@xpiotrkleban/full-automation-with-argo-rollout-blue-green-deployment-automatic-rollout-abort-and-rollback-54652158fdf4'},
{ 'id': 42, 'Term': 'Automated Rollbacks', 'Description': 'When issues or errors are detected in a new release, automated rollbacks enable the system to automatically revert to the last known stable version of the application. This is crucial for minimizing downtime and user impact in case of unexpected problems.' , 'Reference': 'How does Kubernetes Perform a deployment Rollout and Rollback? (2023, February 27). A DevOps Blog. https://www.valewood.org/kubernetes-how-rollout-and-rollbacks-are-performed/'},
{ 'id': 43, 'Term': 'Kubernetes', 'Description': 'An open-source container orchestration platform that automates the deployment, scaling, and management of containerized applications.' , 'Reference': 'Overview. (n.d.). Kubernetes. https://kubernetes.io/docs/concepts/overview/'},
{ 'id': 44, 'Term': 'Container Registry', 'Description': 'A repository for storing and distributing container images, facilitating the sharing and deployment of containerized applications.' , 'Reference': 'What is a container registry? (2022, July 27). What Is a Container Registry? https://www.redhat.com/en/topics/cloud-native-apps/what-is-a-container-registry'},
{ 'id': 45, 'Term': 'Pod', 'Description': ' The smallest deployable unit in Kubernetes, representing a single instance of a container or a group of tightly coupled containers sharing network and storage resources.' , 'Reference': 'Pods. (n.d.). Kubernetes. https://kubernetes.io/docs/concepts/workloads/pods/'},
{ 'id': 46, 'Term': 'Kubectl', 'Description': 'The command-line tool used for interacting with and managing Kubernetes clusters.' , 'Reference': 'Command line tool (kubectl). (n.d.). Kubernetes. https://kubernetes.io/docs/reference/kubectl/'},
{ 'id': 47, 'Term': 'Kubernetes Namespace', 'Description': 'A virtual partition within a Kubernetes cluster that provides logical isolation, allowing multiple teams or applications to share the same cluster resources securely. ' , 'Reference': 'Namespaces. (n.d.). Kubernetes. https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'},
{ 'id': 48, 'Term': 'Kubeconfig', 'Description': 'A configuration file used by kubectl to specify the details of a Kubernetes cluster, including its API server, authentication, and context.' , 'Reference': 'Organizing Cluster Access Using kubeconfig Files. (n.d.). Kubernetes. https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/'},
{ 'id': 49, 'Term': 'Kubernetes Operator', 'Description': ' A Kubernetes pattern for packaging, deploying, and managing applications as custom resources, enabling automation and self-healing capabilities. ' , 'Reference': 'Operator pattern. (n.d.). Kubernetes. https://kubernetes.io/docs/concepts/extend-kubernetes/operator/'},
{ 'id': 50, 'Term': 'Kubernetes Ingress', 'Description': 'An API object in Kubernetes that manages external access to services within the cluster, typically used for routing HTTP and HTTPS traffic. ' , 'Reference': 'Ingress. (n.d.). Kubernetes. https://kubernetes.io/docs/concepts/services-networking/ingress/'},
];



/* GET home page. */
router.get('/', function(req, res, next) {
  res.render('index', { title: 'SIT722 DevOps Glossary', sub: 'my website showing a collection of DevOps terms and their brief description', names: nameList  });
});

module.exports = router;
